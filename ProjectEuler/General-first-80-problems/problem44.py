###############
# Problem 44  #
###############

"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

"""
import time, math
print("Problem 44")

start = time.time()

def P(n):
    return(int((n* (3 * n - 1)) / 2))

# Generate a set of Pentaganol numbers
p = set()
for n in range(3, 10000):
    p.add(P(n))

smallest = math.inf
for p1 in range(1, 10000):
    j = P(p1)
    if j in p:
        for p2 in range(p1, 0, -1):
            k = P(p2)
            done = False
            # If we find the first one it will be minimised
            if (j + k) in p and (j - k) in p:
                pDiff = j - k
                done = True
                break
        if done:
            break

end = time.time()
print("Pentagonal difference that is minimised is", pDiff)
print("Time taken:", int((end - start)*100) / 100, "Seconds")
print()

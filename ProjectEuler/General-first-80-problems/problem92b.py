##############
# Problem 92 #
##############

"""
A number chain is created by continuously adding the square of the digits in a number to form a new number until it has been seen before.

For example,

44 → 32 → 13 → 10 → 1 → 1
85 → 89 → 145 → 42 → 20 → 4 → 16 → 37 → 58 → 89

Therefore any chain that arrives at 1 or 89 will become stuck in an endless loop. What is most amazing is that EVERY starting number will eventually arrive at 1 or 89.

How many starting numbers below ten million will arrive at 89?
"""
import time

start = time.time()
print("Problem 92")
count = 0
squares = {"0": 0, "1":1, "2":4, "3":9, "4":16, "5":25, "6":36, "7":49, "8":64, "9":81}
cache89 = {'18', '462', '300', '461', '20', '450', '317', '84', '369', '499', '516', '213', '298', '308', '360', '53', '503', '83', '314', '116', '123', '567', '425', '327', '281', '21', '77', '278', '321', '195', '174', '135', '494', '434', '98', '238', '267', '357', '85', '8', '122', '348', '266', '436', '153', '396', '470', '399', '180', '80', '488', '197', '101', '290', '401', '346', '306', '3', '62', '288', '61', '467', '185', '107', '58', '64', '137', '374', '177', '163', '339', '398', '333', '471', '414', '108', '95', '248', '441', '405', '354', '261', '353', '294', '56', '453', '148', '344', '124', '233', '164', '323', '484', '284', '59', '377', '375', '518', '224', '4', '128', '12', '161', '147', '418', '350', '55', '247', '184', '11', '254', '330', '105', '245', '427', '182', '255', '335', '468', '342', '381', '466', '452', '324', '259', '2', '69', '332', '76', '215', '463', '432', '454', '162', '550', '146', '45', '303', '269', '533', '46', '270', '246', '223', '479', '275', '113', '66', '145', '380', '482', '448', '227', '235', '34', '433', '340', '96', '311', '209', '183', '438', '442', '412', '244', '22', '241', '60', '449', '25', '495', '206', '178', '439', '186', '285', '260', '204', '131', '460', '252', '393', '52', '347', '87', '373', '202', '370', '138', '358', '33', '423', '457', '73', '371', '309', '170', '228', '201', '501', '78', '89', '65', '104', '272', '196', '336', '250', '121', '232', '39', '117', '172', '389', '328', '72', '150', '29', '155', '40', '502', '171', '349', '111', '168', '473', '140', '158', '141', '296', '126', '207', '286', '175', '221', '191', '287', '416', '274', '156', '355', '297', '279', '234', '511', '166', '160', '276', '27', '417', '443', '102', '299', '257', '359', '421', '48', '341', '231', '289', '159', '30', '225', '210', '63', '211', '535', '6', '334', '41', '165', '465', '295', '136', '431', '428', '67', '351', '387', '451', '50', '216', '125', '112', '456', '9', '415', '265', '17', '16', '37', '273', '181', '485', '444', '144', '307', '42', '151', '71', '258', '14', '422', '199', '15', '242', '134', '114', '420', '385', '455', '54', '419', '394', '315', '372', '407', '119', '505', '384', '81', '217', '214', '435', '200', '378', '118', '445', '115', '243', '249', '240', '75', '477', '106', '413', '253', '406', '400', '337', '304', '143', '88', '51', '99', '251', '189', '312', '90', '382', '292', '24', '352', '430', '282', '173', '424', '149', '402', '237', '447', '426', '411', '26', '318', '198', '429', '283', '218', '388', '229', '194', '142', '363', '47', '36', '222', '220', '92', '395', '325', '132', '57', '403', '5', '264', '410', '43', '179', '120', '74', '271', '187', '212', '458', '316', '522', '277', '305', '256', '157', '361', '390', '38', '322', '437', '366', '93', '205', '127', '154', '364', '486', '152', '343', '268', '169', '408', '35', '345', '110'}
for n in range(1, 10000000):
    s = str(n)
    while s != "1" and s != "89":
        digitSquareSum = 0
        for i in range(len(s)):
            digitSquareSum += squares[s[i]]
        s = str(digitSquareSum)
        if s in cache89:
            s = "89"
            break
    if s == "89":
        count += 1
print("Total numbers ending with 89 under 10,000,000:", count)
end = time.time()
print("Time taken:", int((end - start)*100) / 100, "Seconds")
